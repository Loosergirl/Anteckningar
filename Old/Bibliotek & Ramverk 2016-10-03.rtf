{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1053{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 6.2.9200}\viewkind4\uc1 
\pard\sl240\slmult1\b\f0\fs36\lang29 F\'f6rmiddag: Bibliotek & Ramverk\b0\fs22\par
\b Hemsidans best\'e5ndsdelar\b0 : \par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sl240\slmult1\b index.html\b0 : Ger en webbsida sin struktur. HTML betyder hypertext markup language. Det \'e4r bara ett av m\'e5nga markup-languages\par
{\pntext\f1\'B7\tab}\b script.js\b0 : Animationer, interaktion. Bidrar med ytterligare funktionalitet, t.ex. form validation (logga in med l\'f6senord), input feedback (man ska f\'e5 veta att n\'e5got h\'e4nt n\'e4r man tryckt p\'e5 en knapp), animation.\par
{\pntext\f1\'B7\tab}\b CSS\b0 : Cascading Style Sheet. Hur allting stylas. Position, f\'e4rg, form, storlek. Om man vill ha en viss typografi (font).\par

\pard\sl240\slmult1\par
 Keep it \b DRY\b0 ! (Don't Repeat Yourself) Vi arbetar mot att \'e5teranv\'e4nda kod. Samtidigt f\'f6rs\'f6ker vi skriva kod som kan delas med andra. Ramverk och bibliotek handlar om att andra delar kod med oss.\par
\par
JavaScript har inbygda funktioner. Varje \'e5r standardiseras JavaScript och nya funktioner tillkommer. Vanligt f\'f6rekommande uppgifter g\'f6rs till funktioner. De implementeras i JavaScript; d.v.s. de blir \b native\b0 . Tyv\'e4rr kan inte \'e4ldre browsers anv\'e4nda de nyaste versionerna av JavaScript. \par
\par
\b Bibliotek \b0 kan man anv\'e4nda sig av som utbyggnader f\'f6r sitt programmeringsspr\'e5k. De \'e4r i princip samlingar med funktioner. Man kan anv\'e4nda olika bibliotek beroende p\'e5 vad man vill ha gjort. Bibliotek \'e4r i regel v\'e4ldefinierade med fokus p\'e5 att l\'f6sa specifika uppgifter. Tyv\'e4rr blir laddtider l\'e4ngre ju mer funktionalitet som l\'e4ggs till en webbsida; d\'e4rf\'f6r vill man kontrollera om vissa bibliotek ska anv\'e4ndas eller inte. Tiden som kodaren l\'e4gger reduceras oftast mycket genom att man anv\'e4nder ett tidigare existerande bibliotek d\'e4r n\'e5gon redan l\'f6st alla problem.\par
\par
Problem som kan uppst\'e5 med bibliotek \'e4r att deras skapare kan ta bort dem eller sluta uppdatera dem. \par
\par
\b Ramverk \b0 f\'f6rser oss med funktionalitet och struktur som redan finns, som koden m\'e5ste f\'f6rh\'e5lla sig till. Vi fyller bara p\'e5 med det vi vill ha. Ramverk kan j\'e4mf\'f6ras med mallar. De \'e4r skelett som vi bygger p\'e5 med kod. Funktionaliteten finns men inte inneh\'e5llet. Ramverken \'e4r i grunden JavaScript som skapats av andra.\par
\par
Senare kommer vi v\'e4lja ramverk och bibliotek som vi jobbar utifr\'e5n ist\'e4llet f\'f6r att vi bara h\'e5ller oss till JavaScript \'e0 naturell. Ramverk \'e4r orsaken till att alla hemsidor ser likadana ut. Man fixar till det lite men i grunden \'e4r det samma skelett.\par
\par
F\'f6rdelen med ramverk \'e4r att man inte beh\'f6ver arbeta lika mycket. Det \'e4r d\'e4remot viktigt att kunna JavaScript och att vara bekv\'e4m med ramverket.\par
\par
Ramverk i sig kan vara uppbyggda av flera bibliotek.\par
\par
\b Inversion of Control\b0 . N\'e4r du har ett bibliotek styr du vad du ska ta med. Med ett ramverk \'e4r det tv\'e4rt om; ramverket styr oss ist\'e4llet f\'f6r att vi styr det. Man ska bara fylla i luckor och resten sk\'f6ts av ramverket. \par
\par
Runt ramverk v\'e4xer det upp communities d\'e4r problem kan l\'f6sas. Det blir l\'e4ttare att fels\'f6ka.\par
\par
Ramverk \'e4r inte bundet till JavaScript specifikt. Det \'e4r m\'f6jligt att ha t.ex. ett CSS-ramverk (exempelvis Bootstrap). Angular \'e4r ett vanligt f\'f6rekommande JavaScript-ramverk. (?) I andra fall kan man ha teoretiska ramverk som bara \'e4r instruktioner hur n\'e5got ska g\'f6ras.\par
\par
\b MVC\b0 . M\'e5nga ramverk brukar arbeta utifr\'e5n MVC. Det st\'e5r f\'f6r Model View Controller. Man delar upp hemsidan s\'e5 att var sak g\'f6r sin grej. Varje funktion ska g\'f6ra en sak s\'e5 att man kan se hur datan fl\'f6dar. Man delar upp det f\'f6r att f\'e5 b\'e4ttre \'f6verblick. \par
\par
Model \'e4r logiken bakom. View \'e4r vad som syns p\'e5 sidan; vi separerar det vi ser fr\'e5n det som h\'e4nder i bakgrunden. Controller sk\'f6ter kommunikationen mellan Model och View. Genom att dela upp det blir det l\'e4ttare att g\'f6ra \'e4ndringar, uppdatera inneh\'e5ll, \'e5teranv\'e4nda kod och undvika konflikter; dessutom blir det tydligare hur v\'e5r data anv\'e4nds.\par
\par
Olika ramverk hanterar MVC olika. En del k\'f6r en variant av MVC. MV* saknar kontroller. MVVM \'e4r Model View Viewmodel.\par
\par
\b Stack\b0 . Bibliotek, ramverk och andra verktyg vi anv\'e4nder kallas v\'e5r Stack. Det \'e4r helt enkelt alla delar som anv\'e4nds f\'f6r att bygga webbsidan. Stora appar och webbplatser har i regel stora stacks.\par
\par
F\'f6r att se vad stora f\'f6retag anv\'e4nder f\'f6r stacks kan man g\'e5 in p\'e5\par
 {{\field{\*\fldinst{HYPERLINK http://stackshare.io/ }}{\fldrslt{http://stackshare.io/\ul0\cf0}}}}\f0\fs22\par
\par
Det \'e4r inte bara JavaScript.\par
\par
Ordet Fullstack \'e4r relaterat till Stack.\par
\par
\b Uppgift\b0\par
Trendspaning. Vilka ramverk och bibliotek anv\'e4nds just nu? Presentation p\'e5 eftermiddagen. Se GitHub f\'f6r exakta instruktioner.\par
\par
blablablablablablablablablablablablablablablablablablablablablablablablablablablablablabla\par
\par
\b Angular \b0 l\'f6ser problemet att HTML aldrig designades f\'f6r dynamic views. Det \'e4r mycket extenserbart och fungerar bra med andra bibliotek. All funktionalitet kan modifieras eller ers\'e4ttas f\'f6r att passa unika behov. \par
\tab Det \'e4r ett slags MVC. Angular byter ut DOM-manipulation med data binding f\'f6r att l\'e4nka samman model och view. Snarare manipulerar DOM. Inte m\'e5nga ramverk kan g\'f6ra det. Mycket responsiv. Anv\'e4ndaren kan skapa custom directives.\par
\tab Ett problem \'e4r att folk som surfar utan JavaScript inte kommer kunna se n\'e5got.\par
\par
Bygger p\'e5 HTML. Anv\'e4nds mest f\'f6r att binda data till vissa HTML-taggar.\par
Problemet \'e4r skalbarhet.\par
\par
Exempel p\'e5 hemsida skapad med Angular: Intel\par
\par
Angular utvecklades av Google.\par
\par
Snabbt att utveckla applikationer som pratar med applikationer\par
Inbygd testning\par
Interaktivt\par
L\'e4nka till olika tillst\'e5nd\par
\par
\b Bootstrap\b0\par
Bootstrap s\'e4ger sig vara det popul\'e4raste HTML, CSS och JavaScript ramverket i v\'e4rlden f\'f6r att bygga responsiva webbsidor som f\'f6rst utformas f\'f6r mobiltelefoner. Det blir l\'e4tt att skala webbsidor och applikationer. \par
\tab Det \'e4r mycket l\'e4tt att anv\'e4nda och f\'f6renklar koden. Man sparar mycket tid och beh\'f6ver inte konstant strukturera om hemsidan. Nackdelen \'e4r att man tr\'f6ttnar p\'e5 den enformiga designen. \par
\par
\b ASP.NET\par
\b0 "ASP.NET is a mature web platform that provides all the services that you require to build enterprise-class server-based web applications using .NET on Windows."\par
ASP.NET \'e4r ett ramverk f\'f6r webbapplikationer p\'e5 serversidan. Syftet \'e4r att skapa dynamiska webbsidor, webbapplikationer och tj\'e4nster. ASP.NET var f\'f6rst med att l\'e4gga bakomliggande kod i en separat fil. Man separerar presentation och inneh\'e5ll. Det \'e4r inte MVC utan f\'f6rmodligen bara MV*.\par
\par
ASP.NET har en efterf\'f6ljare i ASP.NET Core. \'c4r ASP.NET p\'e5 utg\'e5ng?\par
\par
Den riktiga nackadelen med ASP.NET \'e4r kostnaden. Man m\'e5ste k\'f6pa licenser f\'f6r mjukvaran p\'e5 serversidan. Det finns gratisversioner men d\'e5 f\'f6rlorar man f\'f6rdelarna med webbplattformen. \par
\tab Det \'e4r lite tyngre att l\'e4ra sig. \par
\tab Det \'e4r j\'e4ttebra f\'f6r att g\'f6ra Windows-applikationer men riskerar att se ut som Windows Forms.\par
\tab Det var tidigare inte OpenSource.\par
\par
Det \'e4r byggt p\'e5 .NET, gjort av Microsoft. Det fungerar bara p\'e5 Windows om det inte \'e4r ASP.NET Core.\par
\par
ASP.NET \'e4r \'e4r rej\'e4l.\par
\par
ASP.NET\par
Ruby on Rails\par
\par
\par
\b React\b0\par
"A JavaScript library for building user interfaces"\par
Netflix, Airbnb, Instagram, New York Times\par
Fast\par
Only patches parts of the DOM that needs updating\par
Allows building small, reusable, components\par
Universal Rendering: The web application can be rendered on the server and the client from the same codebase; no need for SEO concerns or PhantomJS or Prerender.io.\par
React Native allows adaption to mobile.\par
"Declarative views make your code more predictable and easier to debug."\par
"React outshines Vue in the richness of their ecosystem and abundance of their custom renderers."\par
\par
Some developers become overwhelmed due to the need for additional tooling\par
Also requires additional libraries which you have to piece together yourself\par
Man kan inte bara ha det\par
Only JavaScript\line\line\par
\b Vue\b0\par
"Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable."\par
Easy to learn\par
Bundles together features of other frameworks.\par
Vue-cli scaffolding tool\par
Single-file component, unidirectional communication between components; makes it easier to maintain application state.\par
Able to use pre-processor languages within the components.\par
If there are a lot of elements rather than components, it will be faster than React. If there are more components, it will be slower.\par
Not just JavaScript.\par
\par
No server side rendering solution.\par
No large team behind it.\par
\par
\par
blablablablablablablablablablablablablablablablablablablablablablablablablablablablablabla\par
}
 